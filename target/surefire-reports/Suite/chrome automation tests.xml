<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Venkat-Dell" failures="4" tests="4" name="chrome automation tests" time="58.239" errors="0" timestamp="2024-09-11T13:16:36 EDT">
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="50.191">
    <failure type="java.lang.AssertionError" message="Element____User_Name_Text_Field_is_not_visible expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Element____User_Name_Text_Field_is_not_visible expected [true] but found [false]
at com.anikasystems.common.reports.CReporter.failureReport(CReporter.java:1288)
at seleniumUtilities.GenericMethods.waitForVisibilityOfElement(GenericMethods.java:272)
at river.pages.LoginPage.enterUserName(LoginPage.java:86)
at river.pages.LoginPage.login(LoginPage.java:63)
at river.pages.LoginPage.loginIntoRiverApp(LoginPage.java:54)
at river.steps.LoginSteps.on_Login_Screen_i_logged_in_to_RiverApp(LoginSteps.java:15)
at âœ½.On Login Screen I logged in to River(file:///C:/Venkat/Work/workspace/river-automation/src/test/resources/riverfeatures/Intervieweeform.feature:6)
... Removed 3 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.052">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;the user is logged in&amp;apos; and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&amp;quot;the user is logged in&amp;quot;)
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user navigates to the {string} page&amp;quot;)
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user selects {string}&amp;quot;)
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user reviews the instructions&amp;quot;)
public void the_user_reviews_the_instructions() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user declares an interpreter&amp;quot;)
public void the_user_declares_an_interpreter() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;the information entered should be saved to be completed later&amp;quot;)
public void the_information_entered_should_be_saved_to_be_completed_later() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'the user is logged in' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user reviews the instructions")
public void the_user_reviews_the_instructions() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter")
public void the_user_declares_an_interpreter() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the information entered should be saved to be completed later")
public void the_information_entered_should_be_saved_to_be_completed_later() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.014">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;the user is logged in&amp;apos; and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&amp;quot;the user is logged in&amp;quot;)
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user navigates to the {string} page&amp;quot;)
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user selects {string}&amp;quot;)
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;the user declares an interpreter with all fields filled&amp;quot;)
public void the_user_declares_an_interpreter_with_all_fields_filled() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;the form should be submitted successfully&amp;quot;)
public void the_form_should_be_submitted_successfully() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'the user is logged in' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter with all fields filled")
public void the_user_declares_an_interpreter_with_all_fields_filled() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the form should be submitted successfully")
public void the_form_should_be_submitted_successfully() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.01">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Venkat\Work\workspace\river-automation\path\to\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Venkat\Work\workspace\river-automation\path\to\chromedriver
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at river.steps.HomePageSteps.iNavigateToTheHomepage(HomePageSteps.java:20)
at âœ½.I navigate to the homepage(file:///C:/Venkat/Work/workspace/river-automation/src/test/resources/riverfeatures/homepage.feature:24)
]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- chrome automation tests -->
