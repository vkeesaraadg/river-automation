<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="0" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-11T13:15:37 EDT" name="Suite" finished-at="2024-09-11T13:16:36 EDT" duration-ms="58239">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:river.common.RiverConfigTests@740cae06]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-09-11T13:15:37 EDT" name="chrome automation tests" finished-at="2024-09-11T13:16:36 EDT" duration-ms="58239">
      <class name="river.common.RiverConfigTests">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:15:37 EDT" name="setUpClass" finished-at="2024-09-11T13:15:38 EDT" duration-ms="686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7c37508a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:15:38 EDT" name="beforeTest" finished-at="2024-09-11T13:15:45 EDT" duration-ms="7065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[selenium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[75]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[local]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[windows 10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[River]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:15:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-09-11T13:16:35 EDT" duration-ms="50191" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Language information is saved so the form can be completed and submitted later"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Interviewee form]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Element____User_Name_Text_Field_is_not_visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Element____User_Name_Text_Field_is_not_visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at com.anikasystems.common.reports.CReporter.failureReport(CReporter.java:1288)
at seleniumUtilities.GenericMethods.waitForVisibilityOfElement(GenericMethods.java:272)
at river.pages.LoginPage.enterUserName(LoginPage.java:86)
at river.pages.LoginPage.login(LoginPage.java:63)
at river.pages.LoginPage.loginIntoRiverApp(LoginPage.java:54)
at river.steps.LoginSteps.on_Login_Screen_i_logged_in_to_RiverApp(LoginSteps.java:15)
at âœ½.On Login Screen I logged in to River(file:///C:/Venkat/Work/workspace/river-automation/src/test/resources/riverfeatures/Intervieweeform.feature:6)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:16:35 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-09-11T13:16:35 EDT" duration-ms="52" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Save Draft"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[River Test Cases]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'the user is logged in' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user reviews the instructions")
public void the_user_reviews_the_instructions() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter")
public void the_user_declares_an_interpreter() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the information entered should be saved to be completed later")
public void the_information_entered_should_be_saved_to_be_completed_later() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'the user is logged in' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user reviews the instructions")
public void the_user_reviews_the_instructions() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter")
public void the_user_declares_an_interpreter() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the information entered should be saved to be completed later")
public void the_information_entered_should_be_saved_to_be_completed_later() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:16:35 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-09-11T13:16:35 EDT" duration-ms="14" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Submit declaration with all fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[River Test Cases]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'the user is logged in' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter with all fields filled")
public void the_user_declares_an_interpreter_with_all_fields_filled() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the form should be submitted successfully")
public void the_form_should_be_submitted_successfully() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'the user is logged in' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user is logged in")
public void the_user_is_logged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user navigates to the {string} page")
public void the_user_navigates_to_the_page(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user selects {string}")
public void the_user_selects(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user declares an interpreter with all fields filled")
public void the_user_declares_an_interpreter_with_all_fields_filled() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the form should be submitted successfully")
public void the_form_should_be_submitted_successfully() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:16:35 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-09-11T13:16:35 EDT" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify that the homepage loads correctly"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Homepage Verification]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Venkat\Work\workspace\river-automation\path\to\chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Venkat\Work\workspace\river-automation\path\to\chromedriver
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at river.steps.HomePageSteps.iNavigateToTheHomepage(HomePageSteps.java:20)
at âœ½.I navigate to the homepage(file:///C:/Venkat/Work/workspace/river-automation/src/test/resources/riverfeatures/homepage.feature:24)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:16:35 EDT" name="tearDownClass" finished-at="2024-09-11T13:16:36 EDT" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:river.common.RiverConfigTests@740cae06]" started-at="2024-09-11T13:16:36 EDT" name="afterSuite" finished-at="2024-09-11T13:16:36 EDT" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- river.common.RiverConfigTests -->
    </test> <!-- chrome automation tests -->
  </suite> <!-- Suite -->
</testng-results>
